<?xml version="1.0" encoding="UTF-8"?>

<project name="custom-build" default="default" basedir=".">
    <target name="-compile-java"/>
    <target name="build-native" depends="-build-platform-jar, -assemble-final-jar"/>
    
    <target name="-init-vars">
        <property name="build.native.dir" location="${build.dir}/jni"/>
        <property name="src.native.dir" location="jni"/>
        <property name="complete.jar" value="${dist.dir}/jffi-complete.jar"/>
        <mkdir dir="${build.native.dir}"/>
        
        <!-- normalize the various os.arch naming conventions -->
        <condition property="platform.cpu" value="i386">
            <or>
                <os arch="i386"/>
                <os arch="x86"/>
            </or>
        </condition>
        <condition property="platform.cpu" value="x86_64">
            <or>
                <os arch="amd64"/>
                <os arch="x86_64"/>
            </or>
        </condition>
        <condition property="platform.cpu" value="ppc">
            <or>
                <os arch="ppc"/>
                <os arch="powerpc"/>
            </or>
        </condition>
        <condition property="platform.os" value="Windows">
            <os family="Windows"/>
        </condition>
        <!-- default to os.arch for the cpu -->
        <condition property="platform.cpu" value="${os.arch}">
            <not><isset property="platform.cpu"/></not>
        </condition>
        <condition property="platform.os" value="${os.name}">
            <not><isset property="platform.os"/></not>
        </condition>
        <condition property="platform" value="Darwin">
            <os family="Mac"/>
        </condition>
        <condition property="platform" value="${platform.cpu}-${platform.os}">
            <not><isset property="platform"/></not>
        </condition>
        
        <condition property="native.jar" value="${build.dir}/native.jar">
          <not><isset property="native.jar"/></not>
        </condition>
        <condition property="make.exe" value="gmake">
          <or>
            <os name="FreeBSD"/>
            <os name="OpenBSD"/>
            <os name="AIX"/>
          </or>
        </condition>
        <condition property="make.exe" value="/usr/sfw/bin/gmake">
          <os name="SunOS"/>
        </condition>
        <condition property="make.exe" value="make">
          <not><isset property="make.exe"/></not>
        </condition>
    </target>

    <target name="-generate-native-headers" depends="-init-vars,-compile-java">
        <mkdir dir="${build.native.dir}"/>
        <javah classpath="${build.classes.dir}" destdir="${build.native.dir}" force="yes">
            <class name="com.kenai.jffi.Foreign"/>
            <class name="com.kenai.jffi.ObjectBuffer"/>
        </javah>
        <!--
        <exec executable="javah" failonerror="true">
          <arg line="-d ${build.native.dir}"/>
          <arg line="-classpath ${build.classes.dir}"/>
          <arg line="com.kenai.jffi.Foreign"/>
          <arg line="com.kenai.jffi.ObjectBuffer"/>
        </exec>
        -->
    </target>
    
    <target name="-build-native-library" depends="-init-vars, -generate-native-headers">
        <mkdir dir="${build.native.dir}"/>
        
        <exec executable="cygpath" outputproperty="jni.GNUmakefile" osfamily="Windows">
            <arg value="-u"/>
            <arg value="${src.native.dir}/GNUmakefile"/>
        </exec>
        <exec executable="cygpath" outputproperty="jni.src.dir" osfamily="Windows">
            <arg value="-u"/>
            <arg value="${src.native.dir}"/>
        </exec>
        <exec executable="cygpath" outputproperty="jni.build.dir" osfamily="Windows">
            <arg value="-u"/>
            <arg value="${build.native.dir}"/>
        </exec>
        <exec executable="cygpath" outputproperty="jni.java.home" osfamily="Windows">
            <arg value="-u"/>
            <arg value="${java.home}"/>
        </exec>
        <condition property="jni.GNUmakefile" value="${src.native.dir}/GNUmakefile">
          <not><isset property="jni.GNUmakefile"/></not>
        </condition>
        <condition property="jni.src.dir" value="${src.native.dir}">
          <not><isset property="jni.src.dir"/></not>
        </condition>
        <condition property="jni.build.dir" value="${build.native.dir}">
          <not><isset property="jni.build.dir"/></not>
        </condition>
        <condition property="jni.java.home" value="${java.home}">
          <not><isset property="jni.java.home"/></not>
        </condition>
        <exec executable="${make.exe}" failonerror="true">
            <arg value="JAVA_HOME=${jni.java.home}"/>
            <arg value="SRC_DIR=${jni.src.dir}"/>
            <arg value="JNI_DIR=${jni.src.dir}"/>
            <arg value="BUILD_DIR=${jni.build.dir}"/>
            <arg value="CPU=${os.arch}"/>
            <arg value="-f"/>
            <arg value="${jni.GNUmakefile}"/>
        </exec>

    </target>

    <target name="cross-mingw32" depends="init, -generate-native-headers">
        <mkdir dir="${build.native.dir}"/>

        <exec executable="${make.exe}" failonerror="true">
            <arg value="JAVA_HOME=${java.home}"/>
            <arg value="OS=cross-mingw32"/>
            <arg value="SRC_DIR=${src.native.dir}"/>
            <arg value="JNI_DIR=${src.native.dir}"/>
            <arg value="BUILD_DIR=${build.native.dir}"/>
            <arg value="CPU=${os.arch}"/>
            <arg value="-f"/>
            <arg value="jni/GNUmakefile"/>
        </exec>
        <exec executable="i386-mingw32-strip" failonerror="true">
            <arg value="-S"/> <!-- Strip debug symbols only -->
            <arg value="${build.native.dir}/jffi.dll"/>
        </exec>
        <mkdir dir="${dist.dir}"/>
        <jar jarfile="${dist.dir}/i386-Windows.jar">
            <zipfileset prefix="jni/i386-Windows" dir="${build.native.dir}">
                <include name="jffi.dll"/>
            </zipfileset>
        </jar>
    </target>
    
    <target name="-build-native-testlib" depends="-init-vars">
        <mkdir dir="${build.native.dir}"/>

        <exec executable="${make.exe}" failonerror="true">
            <arg value="JAVA_HOME=${java.home}"/>
            <arg value="BUILD_DIR=${build.dir}"/>
            <arg value="CPU=i386"/>
            <arg value="-f"/>
            <arg value="libtest/GNUmakefile"/>
        </exec>
    </target>
    
    <target name="-build-platform-jar" depends="-init-vars, -build-native-library">
        <echo message="platform=${platform}"/>
        <jar jarfile="${dist.dir}/${platform}.jar">
            <zipfileset prefix="jni/${platform}" dir="${build.native.dir}">
                <include name="jffi.dll"/>
                <include name="libjffi.so"/>
                <include name="libjffi.jnilib"/>
                <include name="libjffi.dylib"/>
                <include name="libjffi.a"/>
            </zipfileset>
        </jar>
    </target>
    
    <target name="-assemble-final-jar" depends="-init-vars, -assemble-native-jar">
        <jar jarfile="${complete.jar}" index="true" update="true" duplicate="preserve"
            filesetmanifest="skip">
            <zipfileset src="${dist.jar}"/>
            <zipfileset src="${native.jar}"/>
        </jar>
    </target>
    <target name="-assemble-native-jar" depends="-init-vars, -build-platform-jar">
        <jar jarfile="${native.jar}" index="true" update="true" duplicate="preserve"
            filesetmanifest="skip">
            <zipfileset src="${dist.dir}/${platform}.jar"/>
            <zipfileset src="archive/i386-Linux.jar"/>
            <zipfileset src="archive/Darwin.jar"/>
            <zipfileset src="archive/i386-SunOS.jar"/>
            <zipfileset src="archive/x86_64-SunOS.jar"/>
            <zipfileset src="archive/sparc-SunOS.jar"/>
            <zipfileset src="archive/sparcv9-SunOS.jar"/>
            <zipfileset src="archive/ppc-AIX.jar"/>
        </jar>
    </target>
    <target name="-archive-platform-jar" depends="-build-platform-jar">
        <copy file="${dist.dir}/${platform}.jar" todir="archive" flatten="true"/>
    </target>
</project>
